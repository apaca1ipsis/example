version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: numbers
    working_dir: /bin
    # command: "bash -c 'kafka-topics --create --topic numbers --bootstrap-server kafka:9092 --partitions 1'"
    # docker exec -it kafka kafka-topics --create --topic numbers --bootstrap-server localhost:9092 --partitions 1

  kafka-setup:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
      cub kafka-ready -b kafka:9092 1 20 && \
      kafka-topics --create --topic numbers --bootstrap-server kafka:9092 --partitions 1 \
      '"
  gen:
    build:
      context: .
      dockerfile: build/gen.Dockerfile
    links:
      - kafka
    depends_on:
      - kafka-setup
    environment:
      KAFKA_HOST: kafka:9092
   # restart: always

  service:
    build:
      context: .
      dockerfile: build/service.Dockerfile
    links:
      - kafka
    depends_on:
      - kafka-setup
      - db_a
    environment:
      KAFKA_HOST: kafka:9092
    restart: always

  pg:
    image: postgres:latest
#    volumes:
#      - ./db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=user
      - POSTGRES_DB=db
    restart: always

  db_a:
    build:
      context: .
      dockerfile: build/db.Dockerfile
    depends_on:
      - pg
    environment:
      LISTEN_PORT: 80
      POSTGRES_DB_HOST: pg
      POSTGRES_DB_PORT: '5432'
      POSTGRES_DB_USER: user
      POSTGRES_DB_PASSWORD: postgres
      POSTGRES_DB_NAME: db
      POSTGRES_SSL_MODE: disable
    restart: always

  db_b:
    build:
      context: .
      dockerfile: build/db.Dockerfile
    depends_on:
      - pg
    environment:
      LISTEN_PORT: 80
      POSTGRES_DB_HOST: pg
      POSTGRES_DB_PORT: '5432'
      POSTGRES_DB_USER: user
      POSTGRES_DB_PASSWORD: postgres
      POSTGRES_DB_NAME: db
      POSTGRES_SSL_MODE: disable
    restart: always

  db_c:
    build:
      context: .
      dockerfile: build/db.Dockerfile
    depends_on:
      - pg
    environment:
      LISTEN_PORT: 80
      POSTGRES_DB_HOST: pg
      POSTGRES_DB_PORT: '5432'
      POSTGRES_DB_USER: user
      POSTGRES_DB_PASSWORD: postgres
      POSTGRES_DB_NAME: db
      POSTGRES_SSL_MODE: disable
    restart: always